config:
  models:
    - name: School      # 表名
      fields:           # 字段填充定义
        - name: name    # 字段名
          filler: RandomString
          args:
            prefix: school-
    - name: Grade
      fields:           # 字段填充定义
        - name: name    # 字段名
          filler: RandomString
          args:
            prefix: grade-
    - name: Class
      fields:
        - name: name
          filler: RandomString
          args:
            prefix: class-

#
# 数据定义中的关键字有
#   alias, model, duplicate, items
# 除去关键字外, 赋值字段以$开头,对应同名的model字段.
# 赋值字段的值中,以下开头会特殊对待
#   'ref>xxx' ref>后为点表达式如"stuObj.name",一级对象从tds中寻找
#   'parent>xxx' parent>后为点表达式,一级对象不论命名都是当前数据实例的父级,留空则默认为父级
#   `calc>lambda x,y: x.id+y.id` calc>后为lambda表达式,按照参数名字面量从tds中获取数据实例
data:
  - model: School
    duplicate:
      - alias: sch
        $name: Sch01
        items:
          - alias: grd1
            model: Grade
            $school: parent>
            items:
              - model: Class
                alias: cls1
                $grade: parent>
          - alias: grd2
            model: Grade
            $school: parent>
      - $name: Sch02
        alias: sch2
  # sch->grd1>cls1>grd2>sch2
  # TreeParser.parse -> List[Node]
  - alias: stu1
    model: Student
    $school_id: ref>sch.id
    $grade_id: ref>grd1.id
    $class_id: ref>cls1.id
    $name: 'calc>lambda sch, grd: 1000*sch.id+100*grd.id'
